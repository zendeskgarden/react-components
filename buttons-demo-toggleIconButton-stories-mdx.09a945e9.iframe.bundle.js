"use strict";(self.webpackChunk_zendeskgarden_react_components=self.webpackChunk_zendeskgarden_react_components||[]).push([[6119],{"./packages/buttons/demo/toggleIconButton.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>toggleIconButton_stories,toggleIconButton:()=>toggleIconButton});var _path,react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const star_stroke=function SvgStarStroke(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,focusable:"false",viewBox:"0 0 16 16","aria-hidden":"true"},props),_path||(_path=react.createElement("path",{fill:"none",stroke:"currentColor",d:"M8 12.4l4 2.6c.4.2.9-.1.8-.5l-1.2-4.6 3.7-3c.4-.3.2-.9-.3-.9l-4.8-.3-1.7-4.5c-.2-.4-.8-.4-.9 0L5.8 5.6 1 5.9c-.5 0-.6.6-.3.9l3.7 3-1.2 4.6c-.1.5.4.8.8.6l4-2.6z"})))};var star_fill_path;function star_fill_extends(){return star_fill_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},star_fill_extends.apply(this,arguments)}const star_fill=function SvgStarFill(props){return react.createElement("svg",star_fill_extends({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,focusable:"false",viewBox:"0 0 16 16","aria-hidden":"true"},props),star_fill_path||(star_fill_path=react.createElement("path",{fill:"currentColor",d:"M12.29 15.56c-.19 0-.38-.05-.54-.16L8 12.97 4.25 15.4c-.35.23-.79.21-1.13-.03a.99.99 0 01-.38-1.07l1.15-4.32L.42 7.16A.99.99 0 01.1 6.08c.13-.4.48-.67.9-.69l4.46-.24L7.07.98c.15-.39.51-.64.93-.64s.78.25.93.64l1.61 4.17 4.46.24c.42.02.77.29.9.69.13.4 0 .82-.32 1.09l-3.47 2.82 1.15 4.32c.11.4-.04.82-.38 1.07-.17.11-.38.18-.59.18z"})))};var prop_types=__webpack_require__("./packages/buttons/node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),IconButton=__webpack_require__("./packages/buttons/src/elements/IconButton.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ToggleIconButton=(0,react.forwardRef)(((_ref,ref)=>{let{isPressed,...otherProps}=_ref;return(0,jsx_runtime.jsx)(IconButton.h,{"aria-pressed":isPressed,ref,...otherProps})}));ToggleIconButton.displayName="ToggleIconButton",ToggleIconButton.propTypes={...IconButton.h.propTypes,isPressed:prop_types_default().oneOf([!0,!1,"mixed"])},ToggleIconButton.defaultProps={isPill:!0,isBasic:!0,size:"medium"};try{ToggleIconButton.displayName="ToggleIconButton",ToggleIconButton.__docgenInfo={description:"",displayName:"ToggleIconButton",props:{isRotated:{defaultValue:null,description:"Rotates icon 180 degrees",name:"isRotated",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"medium"},description:"Specifies the button size",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},isPill:{defaultValue:{value:"true"},description:"Applies pill button styling",name:"isPill",required:!1,type:{name:"boolean"}},isBasic:{defaultValue:{value:"true"},description:"Applies basic button styling",name:"isBasic",required:!1,type:{name:"boolean"}},isSelected:{defaultValue:null,description:"@ignore prop used by `ButtonGroup`",name:"isSelected",required:!1,type:{name:"boolean"}},isDanger:{defaultValue:null,description:"Applies danger styling",name:"isDanger",required:!1,type:{name:"boolean"}},focusInset:{defaultValue:null,description:"Applies inset `box-shadow` styling on focus",name:"focusInset",required:!1,type:{name:"boolean"}},isNeutral:{defaultValue:null,description:"Applies neutral button styling",name:"isNeutral",required:!1,type:{name:"boolean"}},isPrimary:{defaultValue:null,description:"Applies primary button styling",name:"isPrimary",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:'Determines if the button is pressed. Use "mixed" to indicate that\nthe toggle controls other elements which do not share the same value.',name:"isPressed",required:!1,type:{name:'boolean | "mixed"'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/buttons/src/elements/ToggleIconButton.tsx#ToggleIconButton"]={docgenInfo:ToggleIconButton.__docgenInfo,name:"ToggleIconButton",path:"packages/buttons/src/elements/ToggleIconButton.tsx#ToggleIconButton"})}catch(__react_docgen_typescript_loader_error){}var README=__webpack_require__("./packages/buttons/README.md");function _createMdxContent(props){const _components=Object.assign({h1:"h1"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Packages/Buttons/ToggleIconButton",component:ToggleIconButton}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"api",children:"API"}),"\n",(0,jsx_runtime.jsx)(dist.$4,{}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"demo",children:"Demo"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{name:"ToggleIconButton",args:{"aria-label":"Label",isBasic:!0,isPill:!0},argTypes:{disabled:{control:"boolean"},isPressed:{control:"radio",options:[!1,!0,"mixed"]}},parameters:{design:{allowFullscreen:!0,type:"figma",url:"https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=7149%3A41375"}},children:args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1];return(0,jsx_runtime.jsx)(ToggleIconButton,{...args,onClick:()=>updateArgs({isPressed:!args.isPressed}),children:!0===args.isPressed?(0,jsx_runtime.jsx)(star_fill,{}):(0,jsx_runtime.jsx)(star_stroke,{})})}})}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:README})]})}const toggleIconButton=args=>{const updateArgs=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)()[1];return(0,jsx_runtime.jsx)(ToggleIconButton,{...args,onClick:()=>updateArgs({isPressed:!args.isPressed}),children:!0===args.isPressed?(0,jsx_runtime.jsx)(star_fill,{}):(0,jsx_runtime.jsx)(star_stroke,{})})};toggleIconButton.storyName="ToggleIconButton",toggleIconButton.argTypes={disabled:{control:"boolean"},isPressed:{control:"radio",options:[!1,!0,"mixed"]}},toggleIconButton.args={"aria-label":"Label",isBasic:!0,isPill:!0},toggleIconButton.parameters={storySource:{source:"args => {\n  const updateArgs = useArgs()[1];\n  const handleClick = () => updateArgs({\n    isPressed: args.isPressed ? false : true\n  });\n  return <ToggleIconButton {...args} onClick={handleClick}>\n          {args.isPressed === true ? <IconFill /> : <IconStroke />}\n        </ToggleIconButton>;\n}"},design:{allowFullscreen:!0,type:"figma",url:"https://www.figma.com/file/6g87L4FdKZTA3knt3Rsfdx/Garden?node-id=7149%3A41375"}};const componentMeta={title:"Packages/Buttons/ToggleIconButton",component:ToggleIconButton,tags:["stories-mdx"],includeStories:["toggleIconButton"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const toggleIconButton_stories=componentMeta},"./packages/buttons/README.md":module=>{module.exports="# @zendeskgarden/react-buttons [![npm version](https://flat.badgen.net/npm/v/@zendeskgarden/react-buttons)](https://www.npmjs.com/package/@zendeskgarden/react-buttons)\n\nThis package includes components relating to buttons in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/react-buttons\n\n# Peer Dependencies - Also Required\nnpm install react react-dom styled-components @zendeskgarden/react-theming\n```\n\n## Usage\n\n### Button\n\n```jsx\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\nimport { Button } from '@zendeskgarden/react-buttons';\n\n/**\n * Place a `ThemeProvider` at the root of your React application\n */\n<ThemeProvider>\n  <>\n    <Button onClick={() => alert('clicked')}>Default</Button>\n    <Button isPrimary isDanger>\n      Primary danger button\n    </Button>\n  </>\n</ThemeProvider>;\n```\n\n### Media button\n\n```jsx\nimport React, { useState } from 'react';\nimport { Button } from '@zendeskgarden/react-buttons';\nimport StartIcon from '@zendeskgarden/icons/src/16/shield-stroke.svg';\nimport EndIcon from '@zendeskgarden/icons/src/16/chevron-down-stroke.svg';\n\nconst MediaButton = ({ children, ...props }) => {\n  const [isRotated, setRotated] = useState(false);\n\n  return (\n    <Button onClick={() => setRotated(!isRotated)} {...props}>\n      <Button.StartIcon>\n        <StartIcon />\n      </Button.StartIcon>\n      {children}\n      <Button.EndIcon isRotated={isRotated}>\n        <EndIcon />\n      </Button.EndIcon>\n    </Button>\n  );\n};\n```\n\n### Button group\n\n```jsx\nimport React, { useState } from 'react';\nimport { ButtonGroup, Button } from '@zendeskgarden/react-buttons';\n\nconst MyButtonGroup = ({ children, initialItem, ...props }) => {\n  const [selectedItem, setSelectedItem] = useState(initialItem);\n\n  return (\n    <ButtonGroup\n      selectedItem={selectedItem}\n      onSelect={selectedItem => setSelectedItem(selectedItem)}\n      {...props}\n    >\n      {children}\n    </ButtonGroup>\n  );\n};\n\n<MyButtonGroup initialKey=\"item-1\">\n  <Button key=\"item-1\">Item 1</Button>\n  <Button key=\"item-2\">Item 2</Button>\n  <Button key=\"item-3\">Item 3</Button>\n</MyButtonGroup>;\n```\n"}}]);