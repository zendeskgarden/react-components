"use strict";(self.webpackChunk_zendeskgarden_react_components=self.webpackChunk_zendeskgarden_react_components||[]).push([[5567],{"./packages/theming/src/utils/getColor.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>getColor,d:()=>DEFAULT_SHADE});var _elements_theme__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/theming/src/elements/theme/index.ts"),polished__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/polished/dist/polished.esm.js"),lodash_memoize__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash.memoize/index.js");const DEFAULT_SHADE=600,adjust=(color,expected,actual)=>{if(expected!==actual){const amount=Math.abs(expected-actual)/100*.05;return expected>actual?(0,polished__WEBPACK_IMPORTED_MODULE_1__._j)(amount,color):(0,polished__WEBPACK_IMPORTED_MODULE_1__.$n)(amount,color)}return color},getColor=__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_0__)()((function(hue){let retVal,shade=arguments.length>1&&void 0!==arguments[1]?arguments[1]:DEFAULT_SHADE,theme=arguments.length>2?arguments[2]:void 0,transparency=arguments.length>3?arguments[3]:void 0;if(isNaN(shade))return;const palette=theme&&theme.palette?theme.palette:_elements_theme__WEBPACK_IMPORTED_MODULE_2__.Z.palette,colors=theme&&theme.colors?theme.colors:_elements_theme__WEBPACK_IMPORTED_MODULE_2__.Z.colors;let _hue;if(_hue="string"==typeof hue&&colors[hue]||hue,Object.prototype.hasOwnProperty.call(palette,_hue)&&(_hue=palette[_hue]),"object"==typeof _hue){if(retVal=_hue[shade],!retVal){const _shade=Object.keys(_hue).map((hueKey=>parseInt(hueKey,10))).reduce(((previous,current)=>Math.abs(current-shade)<Math.abs(previous-shade)?current:previous));retVal=adjust(_hue[_shade],shade,_shade)}}else retVal=adjust(_hue,shade,DEFAULT_SHADE);return transparency&&(retVal=(0,polished__WEBPACK_IMPORTED_MODULE_1__.m4)(retVal,transparency)),retVal}),((hue,shade,theme,transparency)=>JSON.stringify({hue,shade,palette:theme?.palette,colors:theme?.colors,transparency})))},"./packages/theming/src/utils/retrieveComponentStyles.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function retrieveComponentStyles(componentId,props){const components=props.theme&&props.theme.components;if(!components)return;const componentStyles=components[componentId];return"function"==typeof componentStyles?componentStyles(props):componentStyles}__webpack_require__.d(__webpack_exports__,{Z:()=>retrieveComponentStyles})},"./packages/typography/demo/stories/data.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>BLOCKQUOTE_CHILDREN,Ek:()=>CODE_BLOCK_CHILDREN,VV:()=>LIST_ITEMS,cO:()=>PARAGRAPH_CHILDREN});const BLOCKQUOTE_CHILDREN=["Blockquote one","Blockquote two","Blockquote three"],CODE_BLOCK_CHILDREN={bash:'\n#!/bin/sh\n\n# Exports.\n\nexport ZSH="$HOME/.oh-my-zsh"\n\n# Aliases.\n\nalias ..="cd .."\n\n# Tools.\n\nif [ -f $(brew --prefix nvm)/nvm.sh ]; then\n    mkdir -p $HOME/.nvm\n    export NVM_DIR="$HOME/.nvm"\n    source $(brew --prefix nvm)/nvm.sh\nfi',css:"\nbutton,\n.button,\n#button,\n[role='button'] {\n  display: inline-block;\n  transition:\n    border-color .25s ease-in-out,\n    box-shadow .1s ease-in-out,\n    background-color .25s ease-in-out,\n    color .25s ease-in-out;\n  margin: 0;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  cursor: pointer;\n  overflow: hidden !important;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none; /* Anchor tag reset */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-family: inherit; /* Override for <input> & <button> elements */\n  font-weight: var(--zd-font-weight-regular);\n  -webkit-font-smoothing: subpixel-antialiased;\n  box-sizing: border-box;\n  user-select: none;\n  -webkit-touch-callout: none;\n\n  @media print {\n    display: none;\n  }\n}",diff:"\n@@ -1,3 +1,9 @@\n+This is an important\n+notice! It should\n+therefore be located at\n+the beginning of this\n+document!\n+\n This part of the\n document has stayed the\n same from version to\n@@ -8,13 +14,8 @@\n compress the size of the\n changes.\n \n-This paragraph contains\n-text that is outdated.\n-It will be deleted in the\n-near future.\n-\n It is important to spell\n!check this document. On\n the other hand, a\n misspelled word isn't\n the end of the world.\n@@ -22,3 +23,7 @@\n this paragraph needs to\n be changed. Things can\n be added after it.\n+\n+This paragraph contains\n+important new additions\n+to this document.\n",javascript:"\nPrism.languages.markup = {\n  comment: /\x3c!--[\\s\\S]*?--\x3e/,\n  prolog: /<\\?[\\s\\S]+?\\?>/,\n  doctype: {\n    greedy: true\n  },\n  cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  tag: {\n    greedy: true,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          punctuation: [\n            /^=/,\n            {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: true\n            }\n          ]\n        }\n      },\n      punctuation: /\\/?>/u,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  entity: /&#?[\\da-z]{1,8};/i\n};",json:'\n{\n  "data": [\n    {\n      "key": "product",\n      "version": 1,\n      "schema": {\n        "properties": {\n          "id": {\n            "type": "string",\n            "description": "product id"\n          },\n          "name": {\n            "type": "string",\n            "description": "product name"\n          }\n        },\n        "required": ["id", "name"]\n      },\n      "created_at": "2018-01-01T10:20:30Z",\n      "updated_at": "2018-01-01T10:20:30Z"\n    },\n    {\n      "key": "user",\n      "version": 2,\n      "schema": {\n        "properties": {\n          "id": {\n            "type": "string",\n            "description": "user id"\n          },\n          "name": {\n            "type": "string",\n            "description": "user name"\n          }\n        },\n        "required": ["id", "name"]\n      },\n      "created_at": "2018-01-01T10:20:30Z",\n      "updated_at": "2018-01-01T10:20:30Z"\n    }\n  ]\n}',markdown:'\n# Title 1\n## Title 2\n### Title 3\n#### Title 4\n##### Title 5\n###### Title 6\n\nOur product is an extension of our brand and we want it to feel like Zendesk. We use visual design\nto shape what Zendesk looks like, and voice and tone to shape what Zendesk sounds like.\n\n| Voice      | Tone       |\n| ---------- | ---------- |\n| About us   | About them |\n| Consistent | Variable   |\n\n*Italic*\n**Bold**\n**Bold on\nmultiple lines**\n*Italic on\nmultiple lines too*\n\n* This is\n* an unordered list\n\n1. This is an\n2. ordered list\n\n* *List item in italic*\n* **List item in bold**\n* [List item as a link](http://example.com "This is an example")\n\n> This is a quotation\n>> With another quotation inside\n> _italic here_, __bold there__\n> And a [link](http://example.com)',markup:'\n<!doctype html>\n<html class="no-js" lang="">\n\n<head>\n  <meta charset="utf-8">\n  <title></title>\n  <meta name="description" content="">\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n\n  <meta property="og:title" content="">\n  <meta property="og:type" content="">\n  <meta property="og:url" content="">\n  <meta property="og:image" content="">\n\n  <link rel="manifest" href="site.webmanifest">\n  <link rel="apple-touch-icon" href="icon.png">\n  \x3c!-- Place favicon.ico in the root directory --\x3e\n\n  <link rel="stylesheet" href="css/normalize.css">\n  <link rel="stylesheet" href="css/main.css">\n\n  <meta name="theme-color" content="#fafafa">\n</head>\n\n<body>\n\n  \x3c!-- Add your site or application content here --\x3e\n  <p>Hello world! This is HTML5 Boilerplate.</p>\n  <script src="js/vendor/modernizr-{{MODERNIZR_VERSION}}.min.js"><\/script>\n  <script src="js/plugins.js"><\/script>\n  <script src="js/main.js"><\/script>\n\n  \x3c!-- Google Analytics: change UA-XXXXX-Y to be your site\'s ID. --\x3e\n  <script>\n    window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;\n    ga(\'create\', \'UA-XXXXX-Y\', \'auto\');\n    ga(\'set\', \'anonymizeIp\', true);\n    ga(\'set\', \'transport\', \'beacon\');\n    ga(\'send\', \'pageview\')\n  <\/script>\n  <script src="https://www.google-analytics.com/analytics.js" async><\/script>\n</body>\n\n</html>',python:"\ndef median(pool):\n    '''Statistical median to demonstrate doctest.\n    >>> median([2, 9, 9, 7, 9, 2, 4, 5, 8])\n    7\n    '''\n    copy = sorted(pool)\n    size = len(copy)\n\n    if size % 2 == 1:\n        return copy[(size - 1) / 2]\n    else:\n        return (copy[size/2 - 1] + copy[size/2]) / 2\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",tsx:"\n/**\n * Copyright Zendesk, Inc.\n *\n * Use of this source code is governed under the Apache License, Version 2.0\n * found at http://www.apache.org/licenses/LICENSE-2.0.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Dropdown, Multiselect, Field, Menu, Item, Label } from '@zendeskgarden/react-dropdowns';\nimport { mediaQuery } from '@zendeskgarden/react-theming';\nimport { Row, Col } from '@zendeskgarden/react-grid';\nimport { Tag } from '@zendeskgarden/react-tags';\nimport debounce from 'lodash.debounce';\n\nconst options = [\n  'Asparagus',\n  'Brussel sprouts',\n  'Cauliflower',\n  'Garlic',\n  'Jerusalem artichoke',\n  'Kale',\n  'Lettuce',\n  'Onion',\n  'Mushroom',\n  'Potato',\n  'Radish',\n  'Spinach',\n  'Tomato',\n  'Yam',\n  'Zucchini'\n];\n\nconst StyledCol = styled(Col)`\n  ${p => mediaQuery('down', 'xs', p.theme)} {\n    margin-top: ${p => p.theme.space.sm};\n  }\n`;\n\nconst initialSelectedItems = [options[0], options[1], options[2], options[3]];\n\nconst Example = () => {\n  const [selectedItems, setSelectedItems] = useState(initialSelectedItems);\n  const [compactSelectedItems, setCompactSelectedItems] = useState(initialSelectedItems);\n  const [inputValue, setInputValue] = useState('');\n  const [compactInputValue, setCompactInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [matchingOptions, setMatchingOptions] = useState(options);\n\n  const filterMatchingOptionsRef = useRef(\n    debounce((value: string) => {\n      const matchedOptions = options.filter(option => {\n        return option.trim().toLowerCase().indexOf(value.trim().toLowerCase()) !== -1;\n      });\n\n      setMatchingOptions(matchedOptions);\n      setIsLoading(false);\n    }, 300)\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    filterMatchingOptionsRef.current(inputValue);\n  }, [inputValue]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    filterMatchingOptionsRef.current(compactInputValue);\n  }, [compactInputValue]);\n\n  const renderOptions = () => {\n    if (isLoading) {\n      return <Item disabled>Loading</Item>;\n    }\n\n    if (matchingOptions.length === 0) {\n      return <Item disabled>No matches found</Item>;\n    }\n\n    return matchingOptions.map(option => (\n      <Item key={option} value={option}>\n        <span>{option}</span>\n      </Item>\n    ));\n  };\n\n  return (\n    <Row>\n      <Col>\n        <Dropdown\n          inputValue={inputValue}\n          selectedItems={selectedItems}\n          onSelect={items => setSelectedItems(items)}\n          downshiftProps={{ defaultHighlightedIndex: 0 }}\n          onStateChange={changes => {\n            if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\n              setInputValue((changes as any).inputValue);\n            }\n          }}\n        >\n          <Field>\n            <Label>Vegetables</Label>\n            <Multiselect\n              renderItem={({ value, removeValue }: any) => (\n                <Tag>\n                  <span>{value}</span>\n                  <Tag.Close onClick={() => removeValue()} />\n                </Tag>\n              )}\n            />\n          </Field>\n          <Menu>{renderOptions()}</Menu>\n        </Dropdown>\n      </Col>\n      <StyledCol>\n        <Dropdown\n          inputValue={compactInputValue}\n          selectedItems={compactSelectedItems}\n          onSelect={items => setCompactSelectedItems(items)}\n          downshiftProps={{ defaultHighlightedIndex: 0 }}\n          onStateChange={changes => {\n            if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\n              setCompactInputValue((changes as any).inputValue);\n            }\n          }}\n        >\n          <Field>\n            <Label>Vegetables</Label>\n            <Multiselect\n              isCompact\n              renderItem={({ value, removeValue }: any) => (\n                <Tag>\n                  <span>{value}</span>\n                  <Tag.Close onClick={() => removeValue()} />\n                </Tag>\n              )}\n            />\n          </Field>\n          <Menu isCompact>{renderOptions()}</Menu>\n        </Dropdown>\n      </StyledCol>\n    </Row>\n  );\n};\n\nexport default Example;\n",typescript:"\nimport { clean, publish } from 'gh-pages';\nimport commander, { Command } from 'commander';\nimport { repository as getRepository, token as getToken } from '..';\nimport { handleErrorMessage, handleSuccessMessage } from '../../utils';\nimport { Ora } from 'ora';\nimport execa from 'execa';\n\ninterface IGitHubPagesArgs {\n  dir: string;\n  path?: string;\n  message?: string;\n  token?: string;\n  spinner?: Ora;\n}\n\n/**\n * Execute the `github-pages` command.\n *\n * @param {string} args.dir Folder to publish.\n * @param {string} [args.path] Path to a git directory.\n * @param {string} [args.message] Commit message.\n * @param {string} [args.token] GitHub personal access token.\n * @param {Ora} [args.spinner] Terminal spinner.\n *\n * @returns {Promise<string>} The GitHub pages URL.\n */\nexport const execute = async (args: IGitHubPagesArgs): Promise<string | undefined> => {\n  let retVal: string | undefined;\n\n  try {\n    const token = args.token || (await getToken(args.spinner));\n    const repository = await getRepository(args.path || args.dir, args.spinner);\n    const message = args.message || 'Updates [skip ci]';\n\n    if (token && repository) {\n      const { owner, repo } = repository;\n      let name: string;\n      let email: string;\n\n      try {\n        name = (await execa('git', ['config', 'user.name'])).stdout.toString();\n        email = (await execa('git', ['config', 'user.email'])).stdout.toString();\n      } catch {\n        name = 'Zendesk Garden';\n        email = 'garden@zendesk.com';\n      }\n\n      clean();\n      await publish(\n        args.dir,\n        {\n          repo: `https://${token}@github.com/${owner}/${repo}.git`,\n          user: {\n            name,\n            email\n          },\n          message,\n          silent: true\n        },\n        error => {\n          if (error) {\n            handleErrorMessage(error, 'github-pages', args.spinner);\n          } else {\n            retVal = `https://${owner}.github.io/${repo}/`;\n          }\n        }\n      );\n    } else {\n      throw new Error('Invalid git repository');\n    }\n  } catch (error) {\n    handleErrorMessage(error, 'github-pages', args.spinner);\n\n    throw error;\n  }\n\n  return retVal;\n};"},LIST_ITEMS=[{text:"garden"},{text:"greens",items:[{text:"beans"},{text:"peas",items:[{text:"snap",items:[{text:"fresh"},{text:"frozen"}]},{text:"snow"}]}]},{text:"water"},{text:"rock"}],PARAGRAPH_CHILDREN=["Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic. Parsley shallot courgette tatsoi pea sprouts fava bean collard greens dandelion okra wakame tomato. Dandelion cucumber earthnut pea peanut soko zucchini.","Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga tigernut.","Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jícama green bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea."]},"./packages/typography/src/styled/StyledFont.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>StyledFont,z:()=>THEME_SIZES});var styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),polished__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/polished/dist/polished.esm.js"),_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/theming/src/utils/getColor.ts"),_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/theming/src/utils/retrieveComponentStyles.ts"),_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/theming/src/elements/theme/index.ts"),_types__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/typography/src/types/index.ts");_types__WEBPACK_IMPORTED_MODULE_0__.NO;const THEME_SIZES={small:"sm",medium:"md",large:"lg",extralarge:"xl","2xlarge":"xxl","3xlarge":"xxxl"},StyledFont=styled_components__WEBPACK_IMPORTED_MODULE_3__.ZP.div.attrs({"data-garden-id":"typography.font","data-garden-version":"storybook"}).withConfig({displayName:"StyledFont",componentId:"sc-1iildbo-0"})(["",";",";"],(props=>(props=>{const monospace=props.isMonospace&&-1!==["inherit","small","medium","large"].indexOf(props.size),fontFamily=monospace&&props.theme.fonts.mono,direction=props.theme.rtl?"rtl":"ltr";let fontSize,fontWeight,lineHeight,color;if(monospace)if("inherit"===props.size)fontSize="calc(1em - 1px)",lineHeight="normal";else{const themeSize=THEME_SIZES[props.size];fontSize=(0,polished__WEBPACK_IMPORTED_MODULE_1__.mA)(`${props.theme.fontSizes[themeSize]} - 1px`),lineHeight=(0,polished__WEBPACK_IMPORTED_MODULE_1__.mA)(`${props.theme.lineHeights[themeSize]} - 1px`)}else if("inherit"!==props.size){const themeSize=THEME_SIZES[props.size];fontSize=props.theme.fontSizes[themeSize],lineHeight=props.theme.lineHeights[themeSize]}if(!0===props.isBold?fontWeight=props.theme.fontWeights.semibold:!1!==props.isBold&&"inherit"===props.size||(fontWeight=props.theme.fontWeights.regular),props.hue){const shade="yellow"===props.hue?700:600;color=(0,_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_2__.L)(props.hue,shade,props.theme)}return(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.iv)(["line-height:",";color:",";font-family:",";font-size:",";font-weight:",";direction:",";"],lineHeight,color,fontFamily,fontSize,fontWeight,direction)})(props)),(props=>(0,_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_4__.Z)("typography.font",props)));StyledFont.defaultProps={theme:_zendeskgarden_react_theming__WEBPACK_IMPORTED_MODULE_5__.Z,size:"inherit"};try{StyledFont.displayName="StyledFont",StyledFont.__docgenInfo={description:"",displayName:"StyledFont",props:{size:{defaultValue:{value:"inherit"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"inherit"'},{value:'"extralarge"'},{value:'"2xlarge"'},{value:'"3xlarge"'}]}},isBold:{defaultValue:null,description:"",name:"isBold",required:!1,type:{name:"boolean"}},isMonospace:{defaultValue:null,description:"",name:"isMonospace",required:!1,type:{name:"boolean"}},hue:{defaultValue:null,description:"",name:"hue",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},"data-garden-id":{defaultValue:null,description:"",name:"data-garden-id",required:!1,type:{name:"string"}},"data-garden-version":{defaultValue:null,description:"",name:"data-garden-version",required:!1,type:{name:"any"}},theme:{defaultValue:{value:"{\n  borders,\n  borderRadii,\n  borderStyles,\n  borderWidths,\n  breakpoints,\n  colors: {\n    base: 'light',\n    ...colors\n  },\n  components: {},\n  fonts,\n  fontSizes,\n  fontWeights,\n  iconSizes,\n  lineHeights,\n  palette,\n  rtl: false,\n  shadowWidths,\n  shadows,\n  space\n}"},description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/typography/src/styled/StyledFont.tsx#StyledFont"]={docgenInfo:StyledFont.__docgenInfo,name:"StyledFont",path:"packages/typography/src/styled/StyledFont.tsx#StyledFont"})}catch(__react_docgen_typescript_loader_error){}},"./packages/typography/src/types/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CT:()=>INHERIT_SIZE,Ln:()=>TYPE_ORDERED_LIST,NO:()=>SIZE,a2:()=>LANGUAGES,mW:()=>TYPE_UNORDERED_LIST,uY:()=>HUE});__webpack_require__("./node_modules/react/index.js");const HUE=["grey","red","green","yellow"],SIZE=["small","medium","large"],INHERIT_SIZE=["inherit",...SIZE],TYPE_ORDERED_LIST=["decimal","decimal-leading-zero","lower-alpha","lower-roman","upper-alpha","upper-roman"],TYPE_UNORDERED_LIST=["circle","disc","square"],LANGUAGES=["markup","bash","clike","c","cpp","css","javascript","jsx","coffeescript","actionscript","css-extr","diff","git","go","graphql","handlebars","json","less","makefile","markdown","objectivec","ocaml","python","reason","sass","scss","sql","stylus","tsx","typescript","wasm","yaml"]},"./packages/typography/README.md":module=>{module.exports="# @zendeskgarden/react-typography [![npm version](https://flat.badgen.net/npm/v/@zendeskgarden/react-typography)](https://www.npmjs.com/package/@zendeskgarden/react-typography)\n\nThis package includes components relating to typography in the\n[Garden Design System](https://zendeskgarden.github.io/).\n\n## Installation\n\n```sh\nnpm install @zendeskgarden/react-typography\n\n# Peer Dependencies - Also Required\nnpm install react react-dom styled-components @zendeskgarden/react-theming\n```\n\n## Usage\n\n```jsx\nimport { ThemeProvider } from '@zendeskgarden/react-theming';\nimport { SM } from '@zendeskgarden/react-typography';\n\n/**\n * Place a `ThemeProvider` at the root of your React application\n */\n<ThemeProvider>\n  <SM>This is some small body text</SM>;\n</ThemeProvider>;\n```\n"}}]);